/* ===============================
Pseudo-Element Mixin
=============================== */

/* stylelint-disable
	declaration-colon-space-before */

@mixin pseudo($type: null,$add-space:null) {

	// basic variables
	$size    : 100%;
	$position: 0;

	// list of $types that include basic positioning content
	$pseudo-block-types: (
		null,
		'height',
		'width',
		'full',
		'deluxe',
	);

	// include basic display CSS if in above list
	@if index($pseudo-block-types,$type) {
		content: '';
		position: absolute;
	}

	// if additional space included
	// assumes equal borders (thus doubling)
	@if $add-space {
		$size: calc(100% + #{2 * $add-space});
		$position: #{-1 * $add-space};
	}

	@if $type == height or $type == full or $type == deluxe {
		height: $size;
	}

	@if $type == width or $type == full or $type == deluxe {
		width: $size;
	}

	@if $type == deluxe {
		top : $position;
		left: $position;
	}

	//
	// quotation marks
	//
	@if $type == quote-before { content: '\201C'; }
	@if $type == quote-after { content: '\201D'; }

	@if $type == quotes {
		&::before { content: '\201C'; }
		&::after { content: '\201D'; }
	}
}

// generating dashes
// for plus, minus, x, arrow
@mixin pseudo-dash($short,$long) {

	@include pseudo;

	$long_pos : calc(50% - #{$long / 2});
	$short_pos: calc(50% - #{$short / 2});

	width : $long;
	height: $short;
	left  : $long_pos;
	top   : $short_pos;
}


